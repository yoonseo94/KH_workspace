<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kh.spring.member.model.dao.MemberDao">
<!-- #8.2. @Mapper인터페이스 지정 -->

	<insert id="insertMember">
		insert into 
			member 
		values (
			#{memberId},
			#{password},
			#{name},
			#{gender},
			#{birthday},
			#{email},
			#{phone},
			#{address},
			#{hobby},
			default, 
			null, 
			default)
	</insert>
	<insert id="insertAuthority">
		insert into 
			authority
		values(
			#{memberId}, #{auth})	
	</insert>
	
	<select id="selectOneMember" resultType="member">
		select
			*
		from
			member
		where
			member_id = #{memberId}
	</select>
	
	<update id="updateMember">
		update
			member
		set
			name = #{name},
			gender = #{gender},
			birthday = #{birthday},
			email = #{email},
			phone = #{phone},
			address = #{address},
			hobby = #{hobby},
			updated_at = sysdate
		where
			member_id = #{memberId}
	</update>
	
	<select id="selectMemberList" resultMap="memberMap">
		select
		    *
		from
		    member m join authority a
		        on m.member_id = a.member_id
		order by
			created_at desc 
	</select>
	
	<resultMap type="member" id="memberMap">
		<id column="member_id" property="memberId"/>
		<result column="password" property="password"/>
		<result column="name" property="name"/>
		<result column="gender" property="gender"/>
		<result column="birthday" property="birthday"/>
		<result column="email" property="email"/>
		<result column="phone" property="phone"/>
		<result column="address" property="address"/>
		<result column="hobby" property="hobby"/>
		<result column="created_at" property="createdAt"/>
		<result column="updated_at" property="updatedAt"/>
		<result column="enabled" property="enabled"/>
		<collection property="authorities" ofType="simpleGrantedAuthority">
			<constructor>
				<arg column="auth" javaType="string"/>
			</constructor>
		</collection>
	</resultMap>
	
	<delete id="deleteMemeberRole">
		delete from
			authority
		where
			member_id = #{memberId}
	</delete>
	
	<select id="findByEmail" resultType="member">
		select 
			* 
		from 
			member 
		where 
			email = #{email}
	</select>
	
	<select id="findByMemberIdAndEmail" resultType="member">
		select 
			* 
		from 
			member 
		where 
			member_id = #{memberId}
			and
			email = #{email}
	</select>
	
	<update id="updatePassword">
		update
			member
		set
			password = #{password}
		where
			member_id = #{memberId}	
	</update>
	
</mapper>