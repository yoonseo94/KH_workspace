<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">

	<!-- #9.2. bcryptPasswordEncoder빈 등록 -->
	<beans:bean id="bcryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
	
	<!-- #9.4. 인증/권한 설정 -->
	<!-- static자원은 security filter처리하지 않음 -->
	<http security="none" pattern="/resources/**"/>
	
	<http auto-config="true">
		
		<intercept-url pattern="/" access="permitAll"/>
		<intercept-url pattern="/index.jsp" access="permitAll"/>
		<intercept-url pattern="/member/memberEnroll.do" access="isAnonymous()"/>
		<intercept-url pattern="/member/memberLogin.do" access="isAnonymous()"/>
		<intercept-url pattern="/member/findMemberId.do" access="isAnonymous()"/>
		<intercept-url pattern="/member/findPassword.do" access="isAnonymous()"/>
		<intercept-url pattern="/member/checkIdDuplicate.do" access="isAnonymous()"/>

		<intercept-url pattern="/member/memberLogout.do" access="permitAll"/>
		<intercept-url pattern="/menu/**" access="permitAll"/>
		<intercept-url pattern="/data/**" access="permitAll"/>
	
		<intercept-url pattern="/admin/**" access="hasRole('ADMIN')"/>
		<intercept-url pattern="/board/boardList.do" access="permitAll"/>
		<intercept-url pattern="/board/boardDetail.do" access="permitAll"/>
		
		<intercept-url pattern="/**" access="isAuthenticated()"/>
		
		<!-- 
			login-page GET방식 로그인폼페이지 요청(핸들러 작성필요)
			login-processing-url POST방식 로그인처리 요청(핸들러 작성 불필요)
			authentication-success-forward-url 로그인성공시 후처리. 핸들러를 연결
			authentication-success-handler-ref
		 -->
		<form-login
			login-page="/member/memberLogin.do"
			login-processing-url="/member/memberLogin.do"
			authentication-success-forward-url="/member/loginSuccess.do"
			username-parameter="memberId"
			password-parameter="password"/>
		
		<!-- 
			logout-url POST logout요청 (핸들러 작성 불필요)
			success-handler-ref 로그아웃 성공시 후처리
		 -->
		<logout 
			logout-url="/member/memberLogout.do"
			logout-success-url="/"/>
			
		<!-- 
			disabled="true" csrf공격 대비 기능 사용안함
			csrf : cross site request forgery공격 (악성코드를 통해 권한있는 사용자의 폼제출 유도) 
			모든 POST방식의 폼제출에 csrf공격대비 토큰 검증
		 -->			
		<csrf disabled="false"/>
		
		<!-- 
			token-validity-seconds 토큰유효시간(초) 60 * 60 * 24 * 14 (2주)
		 -->
		<remember-me 
			data-source-ref="dataSource"
			token-validity-seconds="1209600"/>
	</http>
	
	<authentication-manager>
		<!-- 
		<authentication-provider>
			<password-encoder ref="bcryptPasswordEncoder"/>		
			<user-service>
				<user 
					name="honggd"
					password="$2a$10$oDUuqgA16JOHn39iSwq.GeIYzPvj5MyjlA01buPbC6K.ikxFobXGi"
				 	authorities="ROLE_USER"/>
				<user 
					name="sinsa"
					password="$2a$10$oDUuqgA16JOHn39iSwq.GeIYzPvj5MyjlA01buPbC6K.ikxFobXGi"
				 	authorities="ROLE_USER, ROLE_ADMIN"/>
			</user-service>	
		</authentication-provider> 
		-->
		<authentication-provider user-service-ref="securityService">
			<password-encoder ref="bcryptPasswordEncoder"/>
		</authentication-provider>
	</authentication-manager>
	
	<context:component-scan base-package="com.kh.security" />
	
</beans:beans>
